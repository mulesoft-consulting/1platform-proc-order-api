<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" 
xmlns:order-sapapi="http://www.mulesoft.org/schema/mule/order-sapapi"
xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:order-apifor-comm-dix-my-sql="http://www.mulesoft.org/schema/mule/order-apifor-comm-dix-my-sql" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/order-apifor-comm-dix-my-sql http://www.mulesoft.org/schema/mule/order-apifor-comm-dix-my-sql/current/mule-order-apifor-comm-dix-my-sql.xsd
http://www.mulesoft.org/schema/mule/order-sapapi http://www.mulesoft.org/schema/mule/order-sapapi/current/mule-order-sapapi.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd">

	<global-property doc:name="Global Property" name="env" value="dev" />
	<global-property doc:name="Global Property" name="key" value="Mule1379" />
	<configuration-properties doc:name="Configuration properties" doc:id="9eb8a225-0b39-4dd5-972d-3c2c4c6a8a95" file="order.${env}.yaml" />
	<secure-properties:config name="Secure_Properties_Config" doc:name="Secure Properties Config" doc:id="0b1f0d71-ea48-43aa-808d-586cd27f6586" file="order.${env}.secured.yaml" key="${key}" >
		<secure-properties:encrypt algorithm="Blowfish" />
	</secure-properties:config>
	
    <http:listener-config name="order-api-spec-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="order-api-spec-config" raml="order-api-spec.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <order-apifor-comm-dix-my-sql:config name="Order_API_for_CommDix_MySQL_Config" doc:name="Order API for CommDix MySQL Config" doc:id="bcb83043-1fa2-42f5-898d-f0d9d80f0012" property_host="${commdix.host}" property_port="${commdix.port}" property_basePath="${commdix.basePath}" property_protocol="${commdix.protocol}" property_client-id="${secure::commdix.clientId}" property_client-secret="${secure::commdix.clientSecret}" />
	<order-sapapi:config name="Order_SAP_API_Config" doc:name="Order SAP API Config" doc:id="ef8df3b9-dede-44e9-9764-3bed2eff2ee7" property_host="${sap.host}" property_port="${sap.port}" property_basePath="${sap.basePath}" property_protocol="${sap.protocol}" property_client-id="${secure::sap.clientId}" property_client-secret="${secure::sap.clientSecret}" />
	<api-gateway:autodiscovery apiId="${api.id}" doc:name="API Autodiscovery" doc:id="40d28318-9783-4f05-b078-27195f2eb821" flowRef="order-api-spec-main" />
	<flow name="order-api-spec-main">
        <http:listener config-ref="order-api-spec-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="order-api-spec-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="order-api-spec-console">
        <http:listener config-ref="order-api-spec-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="order-api-spec-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\orders\(id):application\json:order-api-spec-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="47f4e224-6ca4-4641-892a-c5f556a3c3e8">
            <ee:variables>
                <ee:set-variable variableName="id"><![CDATA[attributes.uriParams.id]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="8b3609a4-e7e8-46c3-9fd6-d17140f94204" doc:name="Not implemented response">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "ERROR",
        code: "501",
        description: "Not Implemented"
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  }
}]]></ee:set-payload>
            </ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
501]]></ee:set-variable>
			</ee:variables>
        </ee:transform>
    </flow>
    <flow name="delete:\orders\(id):order-api-spec-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="29e0d838-84d2-4bf9-940c-90278a489ecb">
            <ee:variables>
                <ee:set-variable variableName="id"><![CDATA[attributes.uriParams.id]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
		<ee:transform doc:name="Not implemented response" doc:id="454b01de-f983-4ee2-aea3-da9de55c13a3" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  meta: {
    messages: [
      {
        severity: "ERROR",
        code: "501",
        description: "Not Implemented"
      }
    ],
    totalItems: 3,
    pagingOffset: 1,
    pagingLimit: 15
  }
}]]></ee:set-payload>
				<ee:set-attributes ><![CDATA[%dw 2.0
output application/java
---
{
	
}]]></ee:set-attributes>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
501]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
    </flow>
    <flow name="get:\orders:order-api-spec-config">
		<ee:transform doc:name="Set Customer Id" doc:id="d75d3934-0479-43fb-b7d3-a3af605a1e0b" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="customerId" ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.customerId]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="2698fb39-93ca-4cfe-b571-38e65ed750a1" >
			<route >
				<order-apifor-comm-dix-my-sql:get-orders doc:name="Get CommDix orders" doc:id="cc9255eb-af95-4653-8dae-d1a318c9ec7d" customer-id="#[vars.customerId]" config-ref="Order_API_for_CommDix_MySQL_Config"/>
			</route>
			<route >
				<order-sapapi:get-orders doc:name="Get SAP orders" doc:id="7d983a74-a5bf-4904-9525-6776bbce141b" customer-id="#[vars.customerId]" config-ref="Order_SAP_API_Config"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="5d19a533-1b3a-4548-bfa4-499281fa7555" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

var orders = payload."0".payload ++ payload."1".payload
var grupedOrders = (orders groupBy$.id) pluck $
---
grupedOrders map ((item, index) -> 
    if(sizeOf(item) > 1)  
        item[0] - "orderItems" - "sourceSystem" ++ {
		orderItems: flatten(item.*orderItems),
		sourceSystem: item.*sourceSystem joinBy ", "
	}
    else 
        item[0]
)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
    <flow name="get:\orders\(id):order-api-spec-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="838db775-ee3e-4a74-b3bb-6d206894c9e3" doc:name="Set Id">
            <ee:variables>
                <ee:set-variable variableName="id"><![CDATA[attributes.uriParams.id]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <scatter-gather doc:name="Scatter-Gather" doc:id="d22c3766-6655-410d-847a-8f977a060b68" >
			<route >
				<try doc:name="Try" doc:id="ae90d481-1cfa-45ee-9584-fc0c07c3b67d" >
					<order-apifor-comm-dix-my-sql:get doc:name="Get CommDix Order" doc:id="221e338f-2b97-49ce-8855-33a08c089a33" config-ref="Order_API_for_CommDix_MySQL_Config" id="#[vars.id]" />
					<error-handler >
						<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="9dd401a2-88a4-40e2-9836-c1467b974935" type="ORDER-APIFOR-COMM-DIX-MY-SQL:NOT_FOUND">
							<ee:transform doc:name="Set Not Found" doc:id="ce9847d3-d725-414b-9016-04a1a1cf352f" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="commDixNotFound" ><![CDATA[%dw 2.0
output application/java
---
true]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="7447fcad-7ead-40a6-b027-4a8e347827b5" >
					<order-sapapi:get doc:name="Get SAP Order" doc:id="b9424177-5c51-4480-a968-f476a47b58fa" config-ref="Order_SAP_API_Config" />
					<error-handler >
						<on-error-continue enableNotifications="false" logException="false" doc:name="On Error Continue" doc:id="397774db-3b22-4974-a334-351b6ecedc77" type="ORDER-SAPAPI:NOT_FOUND" >
							<ee:transform doc:name="Set Not Found" doc:id="c55f1e00-f6df-4789-bef5-122a24eff4ec" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="sapNotFound" ><![CDATA[%dw 2.0
output application/java
---
true]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Create Response" doc:id="13d145a5-fe70-4a5f-9e54-cdc43198e87e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var mainOrder = if(not (vars.sapNotFound default false)) payload."0".payload 
	else if(not (vars.commDixNotFound default false)) payload."1".payload 
	else null
	
var items = (payload."0".payload.orderItems default []) ++
	(payload."1".payload.orderItems default [])
	
var sources = ([payload."0".payload.sourceSystem] default []) 
	++ ([payload."1".payload.sourceSystem] default [])

---
if (mainOrder != null)
	(mainOrder default {}) - "orderItems" - "sourceSystem" ++ {
		orderItems: items,
		sourceSystem: sources joinBy ", "
	}
else 
	{
	  "messageId": correlationId,
	  "itemId": vars.id,
	  "severity": "ERROR",
	  "code": "401",
	  "description": "Not Found"
	}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
if((vars.sapNotFound default false) or (vars.commDixNotFound default false))
	401
else
	200]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
    </flow>
    <flow name="post:\orders:application\json:order-api-spec-config">
        <order-sapapi:post doc:name="Create Order in SAP" doc:id="a1afe7f6-0cdd-4c68-a719-0c01cac2caf5" config-ref="Order_SAP_API_Config"/>
    </flow>
</mule>
